{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Computer\\\\Projects\\\\Weather-App\\\\client\\\\src\\\\components\\\\DailySummary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDailySummaries } from '../api';\nimport './DailySummary.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\nconst DailySummary = () => {\n  _s();\n  const [summaries, setSummaries] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSummaries = async () => {\n      try {\n        const summariesData = {};\n\n        // Fetch summaries for each city\n        for (const city of cities) {\n          const response = await getDailySummaries(city);\n          summariesData[city] = response.data;\n        }\n        setSummaries(summariesData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching daily summaries:', error);\n        setLoading(false);\n      }\n    };\n    fetchSummaries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Daily Weather Summaries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : Object.keys(summaries).map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"summary-list\",\n        children: summaries[city].map((summary, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${summary.date}: Avg Temp ${summary.avg_temp}°C, Max Temp ${summary.max_temp}°C, Min Temp ${summary.min_temp}°C, Condition ${summary.dominant_condition}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, city, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DailySummary, \"JQeRAu2qhmL3IQECbgopWlIX0m4=\");\n_c = DailySummary;\nexport default DailySummary;\nvar _c;\n$RefreshReg$(_c, \"DailySummary\");","map":{"version":3,"names":["React","useEffect","useState","getDailySummaries","jsxDEV","_jsxDEV","cities","DailySummary","_s","summaries","setSummaries","loading","setLoading","fetchSummaries","summariesData","city","response","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","summary","index","date","avg_temp","max_temp","min_temp","dominant_condition","_c","$RefreshReg$"],"sources":["C:/My Computer/Projects/Weather-App/client/src/components/DailySummary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getDailySummaries } from '../api';\r\nimport './DailySummary.css'; // Import the CSS file\r\n\r\nconst cities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\r\n\r\nconst DailySummary = () => {\r\n  const [summaries, setSummaries] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSummaries = async () => {\r\n      try {\r\n        const summariesData = {};\r\n\r\n        // Fetch summaries for each city\r\n        for (const city of cities) {\r\n          const response = await getDailySummaries(city);\r\n          summariesData[city] = response.data;\r\n        }\r\n\r\n        setSummaries(summariesData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching daily summaries:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSummaries();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"header\">Daily Weather Summaries</h2>\r\n      {loading ? (\r\n        <p className=\"loading\">Loading...</p>\r\n      ) : (\r\n        Object.keys(summaries).map(city => (\r\n          <div key={city} className=\"city-container\">\r\n            <h3>{city}</h3>\r\n            <ul className=\"summary-list\">\r\n              {summaries[city].map((summary, index) => (\r\n                <li key={index}>\r\n                  {`${summary.date}: Avg Temp ${summary.avg_temp}°C, Max Temp ${summary.max_temp}°C, Min Temp ${summary.min_temp}°C, Condition ${summary.dominant_condition}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailySummary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}