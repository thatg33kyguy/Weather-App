{"ast":null,"code":"var _jsxFileName = \"C:\\\\_RAJPRATEEM\\\\PROJECTS\\\\Weather-App\\\\client\\\\src\\\\components\\\\setThresholds.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { setThresholds } from '../api';\nimport './setThreshold.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetThresholds = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [temperatureThreshold, setTemperatureThreshold] = useState('');\n  const [weatherConditions, setWeatherConditions] = useState('');\n  const [consecutiveUpdates, setConsecutiveUpdates] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const thresholds = {\n      city,\n      temperatureThreshold: parseFloat(temperatureThreshold),\n      weatherConditions: weatherConditions.split(',').map(cond => cond.trim()),\n      consecutiveUpdates: parseInt(consecutiveUpdates, 10)\n    };\n    try {\n      await setThresholds(thresholds);\n      setMessage('Thresholds set successfully');\n    } catch (error) {\n      setMessage('Error setting thresholds');\n      console.error('Error setting thresholds:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set-thresholds-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"set-thresholds-heading\",\n      children: \"Set Thresholds for a City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"set-thresholds-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Temperature Threshold:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: temperatureThreshold,\n          onChange: e => setTemperatureThreshold(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Weather Conditions (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: weatherConditions,\n          onChange: e => setWeatherConditions(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Consecutive Updates:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: consecutiveUpdates,\n          onChange: e => setConsecutiveUpdates(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"set-thresholds-button\",\n        children: \"Set Thresholds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"set-thresholds-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SetThresholds, \"oU9wRkwoxUb6xtbwHUe63s5v+vY=\");\n_c = SetThresholds;\nexport default SetThresholds;\nvar _c;\n$RefreshReg$(_c, \"SetThresholds\");","map":{"version":3,"names":["React","useState","setThresholds","jsxDEV","_jsxDEV","SetThresholds","_s","city","setCity","temperatureThreshold","setTemperatureThreshold","weatherConditions","setWeatherConditions","consecutiveUpdates","setConsecutiveUpdates","message","setMessage","handleSubmit","e","preventDefault","thresholds","parseFloat","split","map","cond","trim","parseInt","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/_RAJPRATEEM/PROJECTS/Weather-App/client/src/components/setThresholds.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { setThresholds } from '../api';\nimport './setThreshold.css';\n\nconst SetThresholds = () => {\n  const [city, setCity] = useState('');\n  const [temperatureThreshold, setTemperatureThreshold] = useState('');\n  const [weatherConditions, setWeatherConditions] = useState('');\n  const [consecutiveUpdates, setConsecutiveUpdates] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const thresholds = {\n      city,\n      temperatureThreshold: parseFloat(temperatureThreshold),\n      weatherConditions: weatherConditions.split(',').map(cond => cond.trim()),\n      consecutiveUpdates: parseInt(consecutiveUpdates, 10)\n    };\n\n    try {\n      await setThresholds(thresholds);\n      setMessage('Thresholds set successfully');\n    } catch (error) {\n      setMessage('Error setting thresholds');\n      console.error('Error setting thresholds:', error);\n    }\n  };\n\n  return (\n    <div className=\"set-thresholds-container\">\n      <h2 className=\"set-thresholds-heading\">Set Thresholds for a City</h2>\n      <form onSubmit={handleSubmit} className=\"set-thresholds-form\">\n        <div>\n          <label>City:</label>\n          <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} required />\n        </div>\n        <div>\n          <label>Temperature Threshold:</label>\n          <input type=\"number\" value={temperatureThreshold} onChange={(e) => setTemperatureThreshold(e.target.value)} required />\n        </div>\n        <div>\n          <label>Weather Conditions (comma-separated):</label>\n          <input type=\"text\" value={weatherConditions} onChange={(e) => setWeatherConditions(e.target.value)} required />\n        </div>\n        <div>\n          <label>Consecutive Updates:</label>\n          <input type=\"number\" value={consecutiveUpdates} onChange={(e) => setConsecutiveUpdates(e.target.value)} required />\n        </div>\n        <button type=\"submit\" className=\"set-thresholds-button\">Set Thresholds</button>\n      </form>\n      {message && <p className=\"set-thresholds-message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default SetThresholds;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,QAAQ;AACtC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,UAAU,GAAG;MACjBb,IAAI;MACJE,oBAAoB,EAAEY,UAAU,CAACZ,oBAAoB,CAAC;MACtDE,iBAAiB,EAAEA,iBAAiB,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACxEZ,kBAAkB,EAAEa,QAAQ,CAACb,kBAAkB,EAAE,EAAE;IACrD,CAAC;IAED,IAAI;MACF,MAAMX,aAAa,CAACkB,UAAU,CAAC;MAC/BJ,UAAU,CAAC,6BAA6B,CAAC;IAC3C,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdX,UAAU,CAAC,0BAA0B,CAAC;MACtCY,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC1B,OAAA;MAAIyB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrE9B,OAAA;MAAM+B,QAAQ,EAAElB,YAAa;MAACY,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAC3D1B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpB9B,OAAA;UAAOgC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAE9B,IAAK;UAAC+B,QAAQ,EAAGpB,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF,CAAC,eACN9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAO;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC9B,OAAA;UAAOgC,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAE5B,oBAAqB;UAAC6B,QAAQ,EAAGpB,CAAC,IAAKR,uBAAuB,CAACQ,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpH,CAAC,eACN9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAO;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpD9B,OAAA;UAAOgC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAE1B,iBAAkB;UAAC2B,QAAQ,EAAGpB,CAAC,IAAKN,oBAAoB,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5G,CAAC,eACN9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC9B,OAAA;UAAOgC,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAExB,kBAAmB;UAACyB,QAAQ,EAAGpB,CAAC,IAAKJ,qBAAqB,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChH,CAAC,eACN9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,EACNnB,OAAO,iBAAIX,OAAA;MAAGyB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAEf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnDID,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAqDnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}