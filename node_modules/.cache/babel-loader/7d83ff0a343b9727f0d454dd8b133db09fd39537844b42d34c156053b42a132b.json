{"ast":null,"code":"var _jsxFileName = \"C:\\\\_RAJPRATEEM\\\\PROJECTS\\\\WeatherWise\\\\client\\\\src\\\\components\\\\HisotricalTrends.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDailySummaries } from '../api';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport './HistoricalTrends.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\nconst HistoricalTrends = () => {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const dataPromises = cities.map(async city => {\n          const response = await getDailySummaries(city);\n          return {\n            city,\n            data: response.data\n          };\n        });\n        const results = await Promise.all(dataPromises);\n        const dataObj = results.reduce((acc, {\n          city,\n          data\n        }) => {\n          acc[city] = data;\n          return acc;\n        }, {});\n        console.log(dataObj);\n        setData(dataObj);\n      } catch (error) {\n        console.error('Error fetching historical trends:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const chartData = {\n    labels: [],\n    datasets: cities.map(city => ({\n      label: city,\n      data: [],\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)'\n    }))\n  };\n  Object.keys(data).forEach(city => {\n    data[city].forEach(summary => {\n      if (!chartData.labels.includes(summary.date)) {\n        chartData.labels.push(summary.date);\n      }\n      const cityIndex = cities.indexOf(city);\n      const dateIndex = chartData.labels.indexOf(summary.date);\n      chartData.datasets[cityIndex].data[dateIndex] = summary.avg_temp;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Historical Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoricalTrends, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = HistoricalTrends;\nexport default HistoricalTrends;\nvar _c;\n$RefreshReg$(_c, \"HistoricalTrends\");","map":{"version":3,"names":["React","useEffect","useState","getDailySummaries","Line","Chart","jsxDEV","_jsxDEV","cities","HistoricalTrends","_s","data","setData","fetchData","dataPromises","map","city","response","results","Promise","all","dataObj","reduce","acc","console","log","error","chartData","labels","datasets","label","borderColor","backgroundColor","Object","keys","forEach","summary","includes","date","push","cityIndex","indexOf","dateIndex","avg_temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","_c","$RefreshReg$"],"sources":["C:/_RAJPRATEEM/PROJECTS/WeatherWise/client/src/components/HisotricalTrends.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDailySummaries } from '../api';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport './HistoricalTrends.css'; // Import the CSS file\n\nconst cities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\n\nconst HistoricalTrends = () => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const dataPromises = cities.map(async (city) => {\n          const response = await getDailySummaries(city);\n          return { city, data: response.data };\n        });\n\n        const results = await Promise.all(dataPromises);\n        const dataObj = results.reduce((acc, { city, data }) => {\n          acc[city] = data;\n          return acc;\n        }, {});\n\n        console.log(dataObj)\n\n        setData(dataObj);\n      } catch (error) {\n        console.error('Error fetching historical trends:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const chartData = {\n    labels: [],\n    datasets: cities.map(city => ({\n      label: city,\n      data: [],\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n    }))\n  };\n\n  Object.keys(data).forEach(city => {\n    data[city].forEach(summary => {\n      if (!chartData.labels.includes(summary.date)) {\n        chartData.labels.push(summary.date);\n      }\n      const cityIndex = cities.indexOf(city);\n      const dateIndex = chartData.labels.indexOf(summary.date);\n      chartData.datasets[cityIndex].data[dateIndex] = summary.avg_temp;\n    });\n  });\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"header\">Historical Trends</h2>\n      <div className=\"chart-container\">\n        <Line data={chartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} />\n      </div>\n    </div>\n  );\n};\n\nexport default HistoricalTrends;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}